package com.example.mastercode.diimport com.example.mastercode.network.RestApiimport com.example.mastercode.repository.RepositoryCountryimport com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactoryimport com.squareup.moshi.Moshiimport com.squareup.moshi.kotlin.reflect.KotlinJsonAdapterFactoryimport dagger.Moduleimport dagger.Providesimport dagger.hilt.InstallInimport dagger.hilt.components.SingletonComponentimport retrofit2.Retrofitimport retrofit2.converter.moshi.MoshiConverterFactoryimport javax.inject.Singleton@Module@InstallIn(SingletonComponent::class)object APiModule {    private const val BaseURL="https://restcountries.com/v3/"    @Singleton    @Provides    fun providesMoshi(): Moshi=Moshi.Builder()    .add(KotlinJsonAdapterFactory())    .build()    @Singleton    @Provides    fun providesRetrofit(moshi:Moshi):Retrofit = Retrofit.Builder()        .addCallAdapterFactory(CoroutineCallAdapterFactory())        .baseUrl(BaseURL)        .addConverterFactory(MoshiConverterFactory.create(moshi))        .build()    @Singleton    @Provides    fun provideApiService(retrofit: Retrofit):RestApi=retrofit.create(RestApi::class.java)    @Singleton    @Provides    fun provideRepository(restApi: RestApi):RepositoryCountry=RepositoryCountry(restApi)}