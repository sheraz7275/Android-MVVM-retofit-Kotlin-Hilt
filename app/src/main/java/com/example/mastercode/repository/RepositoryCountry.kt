package com.example.mastercode.repositoryimport android.util.Logimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport com.example.mastercode.domain.CountriesDataModelimport com.example.mastercode.network.RestApiimport com.example.mastercode.utils.ApiStatusimport javax.inject.Injectclass RepositoryCountry @Inject constructor(private val api:RestApi) {    val countriesList= MutableLiveData<List<CountriesDataModel>>()     val status=MutableLiveData<String>()    /*    only have network source  no offline caching.      we can also setup room data base here    */    suspend fun getCountriesData(){        status.value=ApiStatus.Loading.toString()        try {            val resp= api.getCountriesDataAsync().await()            countriesList.value=resp            status.value=ApiStatus.Success.toString()        }catch (exe:Exception){            Log.d("##",exe.toString())            status.value=ApiStatus.Error.toString()        }    }}