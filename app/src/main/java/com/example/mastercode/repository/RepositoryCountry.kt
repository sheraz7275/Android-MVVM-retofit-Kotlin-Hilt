package com.example.mastercode.repositoryimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport com.example.mastercode.domain.CountriesDataModelimport com.example.mastercode.network.Networkimport com.example.mastercode.utils.ApiStatusclass RepositoryCountry {    val countriesList = MutableLiveData<List<CountriesDataModel>>()    val status = MutableLiveData<String>()    /*    only have network source  no offline caching.      we can also setup room data base here    */    suspend fun getCountriesData() {        status.value = ApiStatus.Loading.toString()        try {            val resp = Network.networkReq.getCountriesDataAsync().await()            countriesList.value = resp            status.value = ApiStatus.Success.toString()        } catch (exe: Exception) {            status.value = ApiStatus.Error.toString()        }    }}