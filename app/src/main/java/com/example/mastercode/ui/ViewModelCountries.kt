package com.example.mastercode.uiimport android.view.Viewimport androidx.annotation.NonNullimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport com.example.mastercode.domain.CountriesDataModelimport com.example.mastercode.repository.RepositoryCountryimport com.example.mastercode.utils.ApiStatusimport dagger.hilt.android.lifecycle.HiltViewModelimport kotlinx.coroutines.CoroutineScopeimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.Jobimport kotlinx.coroutines.launchimport java.security.PrivateKeyimport javax.inject.Inject@HiltViewModelclass ViewModelCountries @Inject constructor (private val repositoryCountry: RepositoryCountry) :ViewModel() {    private val _countriesList=repositoryCountry.countriesList    val countriesList:LiveData<List<CountriesDataModel>>    get() = _countriesList     val status=repositoryCountry.status    init {        getData()    }      private fun getData(){          viewModelScope.launch {              repositoryCountry.getCountriesData()          }    }}